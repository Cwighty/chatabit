name: Deploy To Production

env:
  DUCKDNSTOKEN: ${{ secrets.DUCKDNSTOKEN }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  format:
    uses: ./.github/workflows/format.yml

  tests:
    needs: format
    uses: ./.github/workflows/test.yml
    
  check-for-other-changes:
    needs: tests
    runs-on: [self-hosted]
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: check for changes outside of Chat.ImageProcessing and Chat.Web
        id: diff_check
        run: |
          DIFF=$(git diff --name-only HEAD~1 HEAD -- . ':(exclude)./Chat.ImageProcessing' ':(exclude)./Chat.Web')
          if [ -n "$DIFF" ]; then
            echo "::set-output name=changed::true"
          else
            echo "::set-output name=changed::false"
          fi

  deploy-all:
    needs: check-for-other-changes
    uses: ./.github/workflows/diff-and-deploy.yml
    if: needs.check-for-other-changes.outputs.changed == 'true'
    with:
      folder: "src"
      service: ""
    secrets:
      DUCKDNSTOKEN: ${{ secrets.DUCKDNSTOKEN }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

  deploy-imageprocessing:
    uses: ./.github/workflows/diff-and-deploy.yml
    with:
      folder: "Chat.ImageProcessing"
      service: "imageprocessing"
    secrets:
      DUCKDNSTOKEN: ${{ secrets.DUCKDNSTOKEN }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

  deploy-chat:
    uses: ./.github/workflows/diff-and-deploy.yml
    with:
      folder: "Chat.Web"
      service: "chat"
    secrets:
      DUCKDNSTOKEN: ${{ secrets.DUCKDNSTOKEN }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

  deploy-application:
    needs: tests
    runs-on: [self-hosted]
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: redeploy application
        run: |
          cd ops/prod
          docker compose pull
          docker compose build
          docker compose down
          docker compose up -d
